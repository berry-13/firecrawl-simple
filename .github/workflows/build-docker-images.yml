name: Build and Push Docker Images

on:
  pull_request:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAMESPACE: ${{ github.repository_owner }}

jobs:
  build-api:
    name: Build & Push API Image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Setup buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./apps/api
          file: ./apps/api/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ env.IMAGE_NAMESPACE }}/firecrawl:pr-${{ github.event.number }}
            ghcr.io/${{ env.IMAGE_NAMESPACE }}/firecrawl:latest
          build-args: |
            PORT=8080

  build-puppeteer:
    name: Build & Push Puppeteer Service Image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Setup buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./apps/puppeteer-service-ts/
          file: ./apps/puppeteer-service-ts/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ env.IMAGE_NAMESPACE }}/puppeteer-service-ts:pr-${{ github.event.number }}
            ghcr.io/${{ env.IMAGE_NAMESPACE }}/puppeteer-service-ts:latest
          build-args: |
            PORT=3000
